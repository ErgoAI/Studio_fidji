/*
 * SystemProperties.java
 *
 * Created on May 9, 2003, 10:30 AM
 */

package com.xsb.xj.util;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;

import com.xsb.xj.XJDesktop;
/**
 *
 * @author  tanya
 */
@SuppressWarnings("serial")
public class SystemProperties extends JInternalFrame {
    
    /** Creates new form SystemProperties */
    public SystemProperties(XJDesktop desktop) {
        initComponents();
        this.desktop = desktop;
        makeVisible();
        pack();
        setVisible(true);
        addToWindowsMenu("System Properties", desktop);
    }
    
    public void makeVisible(){
        desktop.getContentPane().add(this,javax.swing.JLayeredPane.DEFAULT_LAYER);
        //setVisible(true);
        try { setSelected(true); }
        catch (java.beans.PropertyVetoException e){System.out.println("Exception in InternalTermFrame:"+e);}
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        outputText = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        CloseButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("System Properties");
        setFrameIcon(XJDesktop.XSB_ICON);
        getAccessibleContext().setAccessibleDescription("This window displays system properties which might be useful for error reports.");
        outputText.setText("<HTML><TABLE border=\"0\">"+
            "<TR><TD><FONT COLOR=\"BLACK\">Java Version:</TD><TD>"
            +System.getProperty("java.version")
            +"</FONT></TD></TR>"+
            "<TR><TD><FONT COLOR=\"BLACK\">Operating System:</TD><TD>"+
            System.getProperty("os.name")
            +"</FONT></TD></TR>"+
            "<TR><TD><FONT COLOR=\"BLACK\">OS Architecture:</TD><TD>"+
            System.getProperty("os.arch")
            +"</FONT></TD></TR>"+
            "</TABLE></HTML>");
        getContentPane().add(outputText, java.awt.BorderLayout.CENTER);

        CloseButton.setText("Close");
        CloseButton.setPreferredSize(new java.awt.Dimension(80, 23));
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        jPanel1.add(CloseButton);
        CloseButton.getAccessibleContext().setAccessibleDescription("Click to close the window");

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
       setVisible(false);
       dispose();
    }//GEN-LAST:event_CloseButtonActionPerformed
    
    private void addToWindowsMenu(String title, JFrame frame){
        JMenuBar menu             = frame.getJMenuBar();
        if(menu != null) {
            int menuCount  = menu.getMenuCount();
            int i          = 0;
            while((i < menuCount) && (windowsMenu == null)) {
                if(menu.getMenu(i).getText().equals("Windows")) {
                    windowsMenu = menu.getMenu(i);
                }
                i++;
            }
            if(windowsMenu != null) {
                myMenuItem = new JMenuItem(title);
                myMenuItem.addActionListener(
                new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        try {
                            setSelected(true);
                            setIcon(false);
                        } catch(PropertyVetoException ex) {
                            System.out.println("weird exception trying to select internal window:" + ex);
                        }
                    }
                });
                windowsMenu.add(myMenuItem);
            }
        }
    }
    
    public void dispose() {
        super.dispose();
        if((windowsMenu != null) && (myMenuItem != null)) {
            windowsMenu.remove(myMenuItem);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel outputText;
    // End of variables declaration//GEN-END:variables
    XJDesktop desktop;
    JMenuItem myMenuItem;
    JMenu windowsMenu;
}
